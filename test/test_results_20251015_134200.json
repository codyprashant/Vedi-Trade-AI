{
  "timestamp": "2025-10-15T13:42:00.489334",
  "overall_status": "FAILED",
  "health_score": 40.909090909090914,
  "total_duration": 3.939768075942993,
  "total_tests": 22,
  "passed_tests": 9,
  "test_suites": {
    "test_adaptive_signal_system.py": {
      "status": "failed",
      "return_code": 0,
      "duration": 1.2021675109863281,
      "tests_run": 4,
      "tests_passed": 2,
      "output": "======================================================================\nADAPTIVE SIGNAL GENERATION SYSTEM TEST SUITE\n======================================================================\n\n\ud83e\uddea Adaptive Threshold Volatility Adjustment\n--------------------------------------------------\nTesting adaptive threshold volatility adjustment...\n  Low volatility: ATR=0.5, RSIdev=5.0 \u2192 threshold=55.0%\n  Normal volatility: ATR=1.0, RSIdev=10.0 \u2192 threshold=55.0%\n  High volatility: ATR=2.5, RSIdev=25.0 \u2192 threshold=55.0%\n\u26a0 Adaptive threshold test failed: Low volatility threshold (55.0) should be higher than normal (55.0)\n\u274c FAILED: Adaptive Threshold Volatility Adjustment\n\n\ud83e\uddea Noise Filter Low Volatility Rejection\n--------------------------------------------------\nTesting noise filter rejection of low-quality signals...\n  Low volatility: ATR=0.0005 \u2192 REJECT (low_volatility (atr_ratio=0.000455 < 0.0015); weak_candle_body (ratio=0.333 < 0.6))\n  Weak body: body_ratio=0.05 \u2192 REJECT (weak_candle_body (ratio=0.050 < 0.6))\n  Low confidence: conf=35.0% \u2192 REJECT (weak_candle_body (ratio=0.400 < 0.6); low_confidence (35.0% < 60.0%))\n  Strong signal: ATR=0.0030, conf=75.0% \u2192 REJECT (weak_candle_body (ratio=0.500 < 0.6))\n\u26a0 Noise filter test failed: Strong signal should be accepted but was rejected: weak_candle_body (ratio=0.500 < 0.6)\n\u274c FAILED: Noise Filter Low Volatility Rejection\n\n\ud83e\uddea Signal Consistency Across Timeframes\n--------------------------------------------------\nTesting signal consistency across timeframes...\n  Testing consistent signals...\n  Testing inconsistent signals...\n  Testing new symbol with no history...\n  Consistent signals: confirmed=True, adj=1.76x, reason='consecutive_signals_3|higher_tf_aligned_1.00|high_consistency_1.00'\n  Inconsistent signals: confirmed=True, adj=1.60x, reason='higher_tf_aligned_1.00'\n  New symbol: confirmed=False, adj=1.28x, reason='higher_tf_aligned_1.00|insufficient_confirmation'\n  New symbol confirmation behavior: confirmed=False (this is expected)\n\u2713 Multi-timeframe signal consistency working correctly\n\u2705 PASSED: Signal Consistency Across Timeframes\n\n\ud83e\uddea Confidence Preservation in Strong Trends\n--------------------------------------------------\nTesting confidence preservation in strong trends...\n  Strong trend factors: ATR=1.8, RSIdev=20.0 \u2192 threshold=55.0%\n  Strong candle: body_ratio=0.71 \u2192 PASS (passed_all_filters)\n  MTF confirmation: confirmed=True, adj=1.76x\n  Weak candle in trend: \u2192 REJECT (low_volatility (atr_ratio=0.000727 < 0.0015); weak_candle_body (ratio=0.286 < 0.6); low_confidence (45.0% < 60.0%))\n\u2713 Confidence preservation in strong trends working correctly\n\u2705 PASSED: Confidence Preservation in Strong Trends\n\n======================================================================\nTEST RESULTS: 2/4 tests passed\n======================================================================\n\ud83d\udd27 Some tests failed. Please review and fix issues.\n\n\u26a0\ufe0f  Please address the failing tests before deployment.\n",
      "error": "Traceback (most recent call last):\n  File \"D:\\Trading\\priceTracker\\test\\test_adaptive_signal_system.py\", line 136, in test_adaptive_threshold_volatility_increase\n    assert low_vol_threshold > normal_vol_threshold, f\"Low volatility threshold ({low_vol_threshold:.1f}) should be higher than normal ({normal_vol_threshold:.1f})\"\nAssertionError: Low volatility threshold (55.0) should be higher than normal (55.0)\nTraceback (most recent call last):\n  File \"D:\\Trading\\priceTracker\\test\\test_adaptive_signal_system.py\", line 228, in test_noise_filter_low_volatility_rejects\n    assert valid_strong, f\"Strong signal should be accepted but was rejected: {reason_strong}\"\nAssertionError: Strong signal should be accepted but was rejected: weak_candle_body (ratio=0.500 < 0.6)\nD:\\Trading\\priceTracker\\test\\test_adaptive_signal_system.py:45: FutureWarning: 'T' is deprecated and will be removed in a future version, please use 'min' instead.\n  dates = pd.date_range(start=datetime.now() - timedelta(hours=length), periods=length, freq='15T')\n"
    },
    "test_market_regime_detection.py": {
      "status": "failed",
      "return_code": 1,
      "duration": 0.6351690292358398,
      "tests_run": 4,
      "tests_passed": 3,
      "output": "======================================================================\n\ud83d\udd2c MARKET REGIME DETECTION TEST SUITE\n======================================================================\n\ud83e\uddea Trending Market Adaptation\n--------------------------------------------------\n  Market characteristics: ATR ratio=0.004030, RSI dev=35.0\n  Adaptive threshold: 58.4% (metadata: {'base_threshold': 65.0, 'volatility_adjustment': np.float64(-3.04516393721015), 'momentum_adjustment': -3.6999999999999997, 'trend_adjustment': 0.0, 'total_adjustment': np.float64(-6.61419672465218), 'raw_threshold': np.float64(58.38580327534782), 'final_threshold': np.float64(58.38580327534782), 'was_clamped': np.False_, 'atr_ratio': np.float64(0.0040301092914734335), 'rsi_deviation': 35.0, 'macd_histogram': 0.008, 'price_ma_deviation': 0.0, 'symbol': 'TRENDING_TEST', 'timeframe': 'M15'})\n  Signal validation: False (reason: weak_candle_body (ratio=0.555 < 0.6))\n  MTF confirmation: True (adj: 1.76x)\n\u274c FAILED: Trending Market Adaptation - Strong trending signals should pass sanity filter\n\\n\ud83e\uddea Ranging Market Adaptation\n--------------------------------------------------\n  Market characteristics: ATR ratio=0.001555, RSI dev=8.0\n  Adaptive threshold: 65.8% (metadata: {'base_threshold': 65.0, 'volatility_adjustment': np.float64(1.1119333346048188), 'momentum_adjustment': -0.6799999999999999, 'trend_adjustment': 0.0, 'total_adjustment': np.float64(0.7903200015257826), 'raw_threshold': np.float64(65.79032000152579), 'final_threshold': np.float64(65.79032000152579), 'was_clamped': np.False_, 'atr_ratio': np.float64(0.0015552266661580725), 'rsi_deviation': 8.0, 'macd_histogram': 0.001, 'price_ma_deviation': 0.0, 'symbol': 'RANGING_TEST', 'timeframe': 'M15'})\n  Weak signal validation: False (reason: weak_candle_body (ratio=0.269 < 0.6); low_confidence (55.0% < 60.0%))\n  Strong signal validation: False (reason: weak_candle_body (ratio=0.269 < 0.6))\n  MTF confirmation: True (adj: 1.60x)\n  Ranging market filtering working correctly\n\u2705 PASSED: Ranging Market Adaptation\n\\n\ud83e\uddea Volatile Market Adaptation\n--------------------------------------------------\n  Market characteristics: ATR ratio=0.021440, RSI dev=25.0\n  Adaptive threshold: 55.0% (metadata: {'base_threshold': 65.0, 'volatility_adjustment': -8.0, 'momentum_adjustment': -3.5, 'trend_adjustment': 0.0, 'total_adjustment': -12.4, 'raw_threshold': 52.6, 'final_threshold': 55.0, 'was_clamped': True, 'atr_ratio': np.float64(0.021439635732278146), 'rsi_deviation': 25.0, 'macd_histogram': 0.012, 'price_ma_deviation': 0.0, 'symbol': 'VOLATILE_TEST', 'timeframe': 'M15'})\n  Threshold adjustment for volatility: -10.0%\n  High-confidence signal: False (reason: weak_candle_body (ratio=0.394 < 0.6))\n  Moderate-confidence signal: False (reason: weak_candle_body (ratio=0.394 < 0.6))\n  \u2713 Moderate signals correctly filtered in volatile markets\n\u2705 PASSED: Volatile Market Adaptation\n\\n\ud83e\uddea Low Volatility Market Adaptation\n--------------------------------------------------\n  Market characteristics: ATR ratio=0.000800, RSI dev=3.0\n  Adaptive threshold: 68.4% (metadata: {'base_threshold': 65.0, 'volatility_adjustment': 3.0, 'momentum_adjustment': -0.28, 'trend_adjustment': 0.0, 'total_adjustment': 3.3759999999999994, 'raw_threshold': 68.376, 'final_threshold': 68.376, 'was_clamped': False, 'atr_ratio': 0.0008, 'rsi_deviation': 3.0, 'macd_histogram': 0.0005, 'price_ma_deviation': 0.0, 'symbol': 'LOW_VOL_TEST', 'timeframe': 'M15'})\n  Threshold adjustment for low volatility: +3.4%\n  Signal in low volatility: False (reason: low_volatility (atr_ratio=0.000800 < 0.0015); weak_candle_body (ratio=0.333 < 0.6))\n  \u2713 Low volatility correctly filtered\n\u2705 PASSED: Low Volatility Market Adaptation\n\\n======================================================================\nTEST RESULTS: 3/4 tests passed\n======================================================================\n\ud83d\udd27 Some tests failed. Please review and fix issues.\n\\n\u26a0\ufe0f  Please address the failing tests before deployment.\n",
      "error": null
    },
    "test_edge_cases.py": {
      "status": "failed",
      "return_code": 1,
      "duration": 0.5960695743560791,
      "tests_run": 5,
      "tests_passed": 4,
      "output": "======================================================================\n\ud83d\udd2c EDGE CASES AND ERROR HANDLING TEST SUITE\n======================================================================\n\ud83e\uddea Invalid Input Handling\n--------------------------------------------------\n  None ATR handled: threshold=65.0\n  Negative ATR handled: threshold=72.0\n  Extreme values handled: threshold=55.0\n  Invalid candle 1 handled: False (validation_error: 'NoneType' object has no attribute 'get')\n  Invalid candle 2 handled: False (low_volatility (atr_ratio=0.000000 < 0.0015); weak_candle_body (ratio=0.000 < 0.6))\n  Invalid candle 3 handled: False (low_volatility (atr_ratio=0.000000 < 0.0015); weak_candle_body (ratio=0.000 < 0.6); invalid_ohlc_relationship)\n  Invalid candle 4 handled: False (low_volatility (atr_ratio=0.001000 < 0.0015); weak_candle_body (ratio=0.000 < 0.6); invalid_ohlc_relationship)\n  Invalid candle 5 handled: False (validation_error: unsupported operand type(s) for -: 'float' and 'str')\n  Empty symbol handled: True\n\u2705 PASSED: Invalid Input Handling\n\\n\ud83e\uddea Extreme Market Conditions\n--------------------------------------------------\n  Flash crash conditions: ATR=0.05, RSI dev=45.0\n  Flash crash threshold: 55.0% (metadata: {'base_threshold': 65.0, 'volatility_adjustment': -8.0, 'momentum_adjustment': -4.7, 'trend_adjustment': 0.0, 'total_adjustment': -13.36, 'raw_threshold': 51.64, 'final_threshold': 55.0, 'was_clamped': True, 'atr_ratio': 0.05, 'rsi_deviation': 45.0, 'macd_histogram': -0.1, 'price_ma_deviation': 0.0, 'symbol': 'FLASH_CRASH', 'timeframe': 'M15'})\n  Threshold adjustment: -10.0%\n  Gap candle validation: False (reason: invalid_ohlc_relationship)\n  Market halt threshold: 71.0%\n  Crisis trend confirmation: True (adj: 1.76x)\n\u2705 PASSED: Extreme Market Conditions\n\\n\ud83e\uddea Memory and Performance Limits\n--------------------------------------------------\n  Testing 1000 symbols...\n  Computed thresholds for 50 symbols in 0.00s\n\u274c FAILED: Memory and Performance Limits - float division by zero\n\\n\ud83e\uddea Concurrent Access\n--------------------------------------------------\n  Starting 5 concurrent threads...\n  Completed 50 operations across 5 threads\n  Errors encountered: 0\n  Threshold range: 61.6% - 63.8%\n  Valid signals: 0/50\n\u2705 PASSED: Concurrent Access\n\\n\ud83e\uddea Data Corruption Recovery\n--------------------------------------------------\n  Invalid signal direction handled\n  Normal operation after corruption: True\n  NaN ATR handled: threshold=73.4\n  NaN RSI handled: threshold=69.0\n  Infinite MACD handled: threshold=62.68\n  Negative infinite ATR handled: threshold=73.4\n  NaN candle handled: False (weak_candle_body (ratio=0.000 < 0.6); invalid_ohlc_relationship)\n\u2705 PASSED: Data Corruption Recovery\n\\n======================================================================\nTEST RESULTS: 4/5 tests passed\n======================================================================\n\ud83d\udd27 Some tests failed. Please review and fix issues.\n\\n\u26a0\ufe0f  Please address the failing tests before deployment.\n",
      "error": "Error computing adaptive threshold: unsupported operand type(s) for /: 'NoneType' and 'float'\nError in signal validation: 'NoneType' object has no attribute 'get'\nError in signal validation: unsupported operand type(s) for -: 'float' and 'str'\n"
    },
    "test_enhanced_signal_system.py": {
      "status": "success",
      "return_code": 0,
      "duration": 1.5009911060333252,
      "tests_run": 9,
      "tests_passed": 9,
      "output": "============================================================\nENHANCED VEDI TRADE AI SIGNAL SYSTEM TEST SUITE\n============================================================\n\n\ud83e\uddea Configuration Parameters\n----------------------------------------\nTesting configuration parameters...\n\u2713 Configuration parameters are valid\n\u2705 PASSED: Configuration Parameters\n\n\ud83e\uddea Partial Credit for Neutral Indicators\n----------------------------------------\nTesting partial credit for neutral indicators...\n\u2713 Partial credit for neutral indicators working correctly\n\u2705 PASSED: Partial Credit for Neutral Indicators\n\n\ud83e\uddea Weighted Blend Strategy\n----------------------------------------\nTesting weighted blend strategy...\n\u2713 Weighted blend strategy working correctly\n\u2705 PASSED: Weighted Blend Strategy\n\n\ud83e\uddea Weighted Bias Calculation\n----------------------------------------\nTesting weighted bias calculation...\n\u2713 Weighted bias calculation: Buy 68.5%, Sell 31.5%\n\u2705 PASSED: Weighted Bias Calculation\n\n\ud83e\uddea Two-Tier Confidence Filtering\n----------------------------------------\nTesting two-tiered confidence filtering...\n  \u2713 Strong signal - both tiers pass: Tier1=True, Tier2=True, Pass=True\n  \u2713 Weak directional bias - tier 1 fails: Tier1=False, Tier2=True, Pass=False\n  \u2713 Weak signal strength - tier 2 fails: Tier1=True, Tier2=False, Pass=False\n  \u2713 Both tiers fail: Tier1=False, Tier2=False, Pass=False\n\u2713 Two-tiered confidence filtering working correctly\n\u2705 PASSED: Two-Tier Confidence Filtering\n\n\ud83e\uddea Base Strength Fallback Logic\n----------------------------------------\nTesting base strength fallback logic...\n\u2713 Base strength fallback logic working correctly\n\u2705 PASSED: Base Strength Fallback Logic\n\n\ud83e\uddea Multi-Zone Confidence System\n----------------------------------------\nTesting multi-zone confidence system...\n  Strength 75.0 -> Zone strong\n  Strength 60.0 -> Zone weak\n  Strength 25.0 -> Zone neutral\n\u2713 Confidence zones working correctly\n\u2705 PASSED: Multi-Zone Confidence System\n\n\ud83e\uddea Enhanced MACD Logic\n----------------------------------------\nTesting enhanced MACD logic...\n\u2713 Enhanced MACD logic working correctly\n\u2705 PASSED: Enhanced MACD Logic\n\n\ud83e\uddea Signal Generation Pipeline\n----------------------------------------\nTesting signal generation pipeline components...\n  Strategies: {'trend': {'direction': 'buy', 'strength': 66.66666666666666, 'contributions': {'SMA_EMA': 15, 'MACD': 20, 'ATR_STABILITY': 0}}, 'momentum': {'direction': 'sell', 'strength': 50.0, 'contributions': {'RSI': 0, 'STOCH': 0, 'BBANDS': 0}}, 'combined': {'direction': 'neutral', 'strength': 0.0, 'contributions': {'RSI': 0, 'MACD': 0, 'SMA_EMA': 15, 'BBANDS': 0, 'STOCH': 0, 'ATR_STABILITY': 0}}}\n  Best signal: {'strategy': 'weighted_blend', 'direction': 'buy', 'strength': 59.99999999999999, 'components': {'trend': {'strength': 66.66666666666666, 'weighted': 39.99999999999999}, 'momentum': {'strength': 50.0, 'weighted': 20.0}, 'combined': {'strength': 0.0, 'weighted': 0.0}}, 'best_individual': 'trend'}\n\u2713 Signal generation pipeline components working correctly\n\u2705 PASSED: Signal Generation Pipeline\n\n============================================================\nTEST RESULTS: 9/9 tests passed\n============================================================\n\ud83c\udf89 ALL TESTS PASSED! Enhanced signal system is working correctly.\n\n\ud83d\ude80 Enhanced Vedi Trade AI signal system is ready for production!\n",
      "error": null
    }
  },
  "system_info": {
    "python_version": "3.12.1 (tags/v3.12.1:2305ca5, Dec  7 2023, 22:03:25) [MSC v.1937 64 bit (AMD64)]",
    "platform": "win32",
    "test_directory": "D:\\Trading\\priceTracker\\test"
  }
}